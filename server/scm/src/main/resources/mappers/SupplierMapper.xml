<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.scm.supplier.mapper.SupplierMapper">

<resultMap id="purchaseMatMap" type="PurchaseMatVO">
    <id property="purId" column="PUR_ID"/>
    <result property="matId" column="MAT_ID"/>
    <result property="reqQty" column="REQ_QTY"/>
    <result property="outTotalQty" column="OUT_TOTAL_QTY"/>
    <result property="purMatStatus" column="PUR_MAT_STATUS"/>
    <result property="resonComm" column="RESON_COMM"/>
    <result property="mrpDetId" column="MRP_DET_ID"/>
    <result property="vendorId" column="VENDOR_ID"/>
    <result property="empName" column="EMP_NAME"/>
    <result property="regDate" column="REG_DATE"/>
    <result property="purNo" column="PUR_NO"/>
    <result property="total" column="TOTAL"/>
    <result property="dueDate" column="DUE_DATE"/>

   <association property="materialVO" resultMap="com.yedam.scm.common.CommonMapper.MaterialMap"/>
   <association property="purStatusLogVO" resultMap="com.yedam.scm.common.CommonMapper.PurStatusLogMap"/>
</resultMap>

<!--자재구매목록-->
<select id="getMatOerderList" parameterType="string" resultMap="purchaseMatMap">
SELECT pm.pur_id,
       pm.req_qty,
       pm.mat_id,
       m.mat_name,
       pm.emp_name,
       pm.reg_date,
       pm.pur_no,
       pm.total,
       pm.due_date,
       m.mat_name,
       m.mat_unit_price,
       m.unit
FROM purchase_mat pm
JOIN material m
ON pm.mat_id = m.mat_id 
WHERE pur_mat_status = 'ms1'
AND pm.vendor_id = #{vendorId}
</select>

<!--주문승인상태변경-->
<update id="updateOrderApprove" parameterType="int">
UPDATE purchase_mat
SET pur_mat_status = 'ms2'
WHERE pur_id = #{purId}
</update>
<!--주문상태변경이력등록-->
<insert id="insertStatusLog" parameterType="map">
INSERT INTO purchase_status_log (pur_status_id, name, pur_mat_status, pur_id)
VALUES (seq_purchase_status_log.NEXTVAL, #{name}, 'ms2', #{purId})
</insert>

<!--출고대기목록-->
<select id= "getMatWReleaseList" resultMap="purchaseMatMap">
SELECT pm.pur_id,
       pm.mat_id,
       pm.req_qty,
       pm.out_total_qty,
       pm.due_date,
       pm.emp_name,
       pm.pur_no,
       m.mat_name,
       m.unit,
       pm.pur_mat_status,
       psl.re_date
FROM purchase_mat pm
JOIN material m
  ON pm.mat_id = m.mat_id
JOIN (
    SELECT pur_id, MAX(re_date) AS re_date
    FROM purchase_status_log
    GROUP BY pur_id
) psl
  ON pm.pur_id = psl.pur_id
WHERE pm.vendor_id = #{vendorId}
  AND pm.pur_mat_status in ('ms2', 'ms5')
</select>

<!--공급처출고-->
<!--공급처출고등록시: 1) 주문테이블 update + 상태값 변경(프로시저) 2)입고마스터테이블 seq 3)입고마스터테이블insert 4)입고상세테이블insert-->
<!--1)purchase_mat출고상태값 변경[부분출고], 출고수량누적합 + 상태log테이블 insert-->
<select id="callReleaseMatPoc" parameterType="map" statementType="CALLABLE">
        { call PROC_MAT_RELEASE(
            #{purId,    mode=IN, jdbcType=NUMERIC},  
            #{outQty,   mode=IN, jdbcType=NUMERIC},  
            #{name, mode=IN, jdbcType=VARCHAR}
        )}
</select>

<!--2)마스터 seq"GET"-->
<select id="getInboundMasterPK" resultType="long">
SELECT seq_inbound.NEXTVAL FROM dual
</select>

<!--3)공급처 출고시 입고마스터 insert [위에서 받은 seq + 공급처코드]-->
<insert id="insertInboundMaster" parameterType="map">
INSERT INTO inbound(inbound_id, inbound_no, vendor_id, ven_out_no)
VALUES (#{inboundId}, next_date_code('MI'), #{vendorId}, next_date_code('VO'))
</insert>

<!--4)입고상세테이블 insert-->
<insert id="insertInboundDetail" parameterType="map">
INSERT INTO inbound_detail(inbound_det_id, inbound_id, pur_id, out_qty, vendor_id, mat_id )
VALUES (seq_inbound_detail.NEXTVAL, #{inboundId}, #{purId}, #{outQty}, #{vendorId}, #{matId})
</insert>

</mapper>