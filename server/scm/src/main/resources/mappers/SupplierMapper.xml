<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.scm.supplier.mapper.SupplierMapper">

<resultMap id="purchaseMatMap" type="PurchaseMatVO">
    <id property="purId" column="PUR_ID"/>
    <result property="matId" column="MAT_ID"/>
    <result property="reqQty" column="REQ_QTY"/>
    <result property="outTotalQty" column="OUT_TOTAL_QTY"/>
    <result property="purMatStatus" column="PUR_MAT_STATUS"/>
    <result property="resonComm" column="RESON_COMM"/>
    <result property="mrpDetId" column="MRP_DET_ID"/>
    <result property="vendorId" column="VENDOR_ID"/>
    <result property="empName" column="EMP_NAME"/>
    <result property="regDate" column="REG_DATE"/>
    <result property="purNo" column="PUR_NO"/>
    <result property="total" column="TOTAL"/>
    <result property="dueDate" column="DUE_DATE"/>
    <result property="expectDate" column="EXPECT_DATE"/>
    <result property="shipOrderNo" column="SHIP_ORDER_NO"/>
    <result property="outQty" column="OUT_QTY"/>

   <association property="materialVO" resultMap="com.yedam.scm.common.CommonMapper.MaterialMap"/>
   <association property="purStatusLogVO" resultMap="com.yedam.scm.common.CommonMapper.PurStatusLogMap"/>
   <association property="wareHouseVO" resultMap="com.yedam.scm.common.CommonMapper.wareHouseResultMap"/>
</resultMap>


<!--발주구매목록-->
<select id="getMatOerderList" parameterType="string" resultMap="purchaseMatMap">
SELECT pm.pur_id,
       pm.req_qty,
       pm.mat_id,
       m.mat_name,
       pm.emp_name,
       pm.reg_date,
       pm.pur_no,
       pm.total,
       pm.due_date,
       w.wh_name,
       m.mat_name,
       m.stock_unit
FROM purchase_mat pm
JOIN material m
ON pm.mat_id = m.mat_id 
JOIN warehouse w
ON pm.to_warehouse = w.wh_id
WHERE pur_mat_status = 'ms1'
AND pm.vendor_id = #{vendorId}
</select>

<!--발주승인상태변경-->
<update id="updateOrderApprove" parameterType="int">
UPDATE purchase_mat
SET pur_mat_status = 'ms2'
WHERE pur_id = #{purId}
</update>
<!--발주상태변경이력등록-->
<insert id="insertStatusLog" parameterType="map">
INSERT INTO purchase_status_log (pur_status_id, log_name, log_pur_mat_status, log_pur_id)
VALUES (seq_purchase_status_log.NEXTVAL, #{name}, 'ms2', #{purId})
</insert>

<!--발주반려-->
<select id="callUpdateOrderReject" parameterType="map" statementType="CALLABLE">
        { call PROC_ORDER_REJECT(
            #{p_pur_id,    mode=IN, jdbcType=NUMERIC},   
            #{p_rej_memo,   mode=IN, jdbcType=VARCHAR},
            #{p_staff,   mode=IN, jdbcType=VARCHAR}
        )}
</select>

<!--출고지시대기목록-->
<select id= "getMatWReleaseList" resultMap="purchaseMatMap">
SELECT pm.pur_id,
       pm.mat_id,
       pm.req_qty,
       pm.out_total_qty,
       pm.due_date,
       pm.emp_name,
       pm.pur_no,
       m.mat_name,
       m.stock_unit,
       pm.pur_mat_status,
       psl.re_date
FROM purchase_mat pm
JOIN material m
  ON pm.mat_id = m.mat_id
JOIN (
    SELECT log_pur_id, MAX(re_date) AS re_date
    FROM purchase_status_log
    GROUP BY log_pur_id
) psl
  ON pm.pur_id = psl.log_pur_id
WHERE pm.vendor_id = #{vendorId}
  AND pm.pur_mat_status in ('ms2', 'ms5')
</select>


<!--공급처 출고지시[출고수량/출고일 등록]-->
<!--1)purchase_mat출고상태값 변경[부분출고], 출고수량누적합 + 상태log테이블 insert-->
<select id="callReleaseMatPoc" parameterType="map" statementType="CALLABLE">
        { call PROC_MAT_RELEASE(
            #{purId,    mode=IN, jdbcType=NUMERIC},  
            #{outQty,   mode=IN, jdbcType=NUMERIC},  
            #{vendorId,   mode=IN, jdbcType=VARCHAR},
            #{expectDate, mode=IN, jdbcType=DATE}
        )}
</select>


<!--공급처출고-->
<!--공급처출고등록시:  1)출고승인목록 출력 2)입고마스터테이블 INSERT 3)입고마스터테이블데이터insert 3)입고상세테이블insert  4)배송정보테이블insert-->
<!--출고승인목록-->
<select id="getApprovedShipmentList" parameterType="string" resultType="com.yedam.scm.vo.ZApprovedShipmentRowVO">
 SELECT 
    pm.pur_id         AS purId,
    psl.log_expect_date    AS expectDate,
    psl.log_sup_out_qty AS outQty,
    psl.log_ship_order_no AS logShipOrderNo,
    pm.mat_id         AS matId,
    pm.emp_name       AS empName,
    pm.vendor_id      AS vendorId,
    m.mat_name        AS matName,
    m.stock_unit      AS stockUnit,
    psl.pur_status_id AS purStatusId,
    w.wh_name        AS warehouseName
FROM purchase_mat pm
JOIN material m
  ON pm.mat_id = m.mat_id
JOIN purchase_status_log psl
  ON psl.log_pur_id = pm.pur_id
JOIN warehouse w
  ON pm.to_warehouse = w.wh_id
WHERE pm.pur_mat_status IN ('ms4','ms5')
  AND psl.log_pur_mat_status IN ('ms4','ms5')
  AND psl.final_ship_con = 'N'
  AND pm.vendor_id = #{vendorId}
ORDER BY pm.expect_date ASC, psl.re_date ASC
</select>

<!--출고등록-->
<!--[1-1]마스터 seq"GET"-->
<select id="getInboundMasterPK" resultType="long">
SELECT seq_inbound.NEXTVAL FROM dual
</select>
<!--[1-2]출고등록 테이블 [입고마스터 + 배송정보 ]-->
<select id="callShipmentMasterPoc" parameterType="InboundVO" statementType="CALLABLE">
    { call PROC_SHIPMENT_MASTER(
        #{vendorId,      mode=IN, jdbcType=VARCHAR},
        #{shipmentInfoVO.carrierName, mode=IN, jdbcType=VARCHAR},
        #{shipmentInfoVO.trackingNo, mode=IN, jdbcType=VARCHAR},
        #{shipmentInfoVO.shipTo,     mode=IN, jdbcType=VARCHAR},
        #{shipmentInfoVO.vehicleNo,  mode=IN, jdbcType=VARCHAR},
        #{inboundId,     mode=IN, jdbcType=NUMERIC},
        #{shipmentInfoVO.shipFrom,   mode=IN, jdbcType=VARCHAR},
        #{venName,       mode=IN, jdbcType=VARCHAR}
    )}
</select>
<!--[2] 입고상세 프로시저 -->
<select id="callShipmentDetailPoc" parameterType="InboundDetailVO" statementType="CALLABLE">
    { call PROC_SHIPMENT_DETAIL(
        #{inboundId,      mode=IN, jdbcType=NUMERIC},
        #{purId,      mode=IN, jdbcType=NUMERIC},
        #{matId,       mode=IN, jdbcType=VARCHAR},
        #{outQty,      mode=IN, jdbcType=NUMERIC},
        #{vendorId,   mode=IN, jdbcType=VARCHAR},
        #{purStatusId,      mode=IN, jdbcType=NUMERIC}
    )}
</select>



</mapper>