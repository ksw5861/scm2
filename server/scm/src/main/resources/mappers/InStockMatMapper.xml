<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.scm.instockMat.mapper.InStockMatMapper">

<resultMap id="inboundResultMap" type="InboundVO">
    <id     property="inboundId"      column="INBOUND_ID"/>
    <result property="inboundNo"      column="INBOUND_NO"/>
    <result property="vendorOutDate"  column="VENDOR_OUT_DATE"/>
    <result property="venName"        column="VEN_NAME"/>
    <result property="inboundStatus"  column="INBOUND_STATUS"/>
    <result property="vendorId"       column="VENDOR_ID"/>
    <result property="venOutNo"       column="VEN_OUT_NO"/>
    <result property="rejMemo"        column="REJ_MEMO"/>
    <result property="unloadEmp"      column="UNLOAD_EMP"/>
    <result property="unloadDate"     column="UNLOAD_DATE"/>

    <association property="shipmentInfoVO" resultMap="com.yedam.scm.common.CommonMapper.ShipmentInfoMap"/>
    <association property="vendorVO" resultMap="com.yedam.scm.common.CommonMapper.VendorMap"/>
    <collection property="details" resultMap="inboundDetailResultMap"/>
</resultMap>

<resultMap id="inboundDetailResultMap" type="InboundDetailVO">
    <id     property="inboundDetId" column="INBOUND_DET_ID"/>
    <result property="inQty"        column="IN_QTY"/>
    <result property="inboundStatus" column="INBOUND_STATUS"/>
    <result property="inboundId"    column="INBOUND_ID"/>
    <result property="purId"        column="PUR_ID"/>
    <result property="inTotalQty"   column="IN_TOTAL_QTY"/>
    <result property="matId"        column="MAT_ID"/>
    <result property="vendorId"     column="VENDOR_ID"/>
    <result property="outQty"       column="OUT_QTY"/>
    <result property="purStatusId"  column="PUR_STATUS_ID"/>

    <association property="inboundLogVO" resultMap="InboundLogMap"/>
    <association property="materialVO" resultMap="com.yedam.scm.common.CommonMapper.MaterialMap"/>
</resultMap>

<resultMap id="InboundLogMap" type="InboundLogVO">
    <id     property="inLogId"        column="IN_LOG_ID" />
    <result property="inboundDetId"   column="INBOUND_DET_ID" />
    <result property="logInQty"       column="LOG_IN_QTY" />
    <result property="logInboundStatus"   column="LOG_INBOUND_STATUS" />
    <result property="reDate"         column="RE_DATE" />
    <result property="logName"        column="LOG_NAME" />
    <result property="logResult"      column="LOG_RESULT" />
    <result property="logImg"         column="LOG_IMG" />
    <result property="logRejQty"      column="LOG_REJ_QTY" />
    <result property="logMemo"        column="LOG_MEMO" />
    <result property="logExpDate"     column="LOG_EXP_DATE" />
</resultMap>

<resultMap id="matlotMap" type="MatLotVO">
    <id property="lotId" column="LOT_ID"/>
    <result property="matId" column="MAT_ID"/>
    <result property="lotNo" column="LOT_NO"/>
    <result property="regDate" column="REG_DATE"/>
    <result property="initQty" column="INIT_QTY"/>
    <result property="currQty" column="CURR_QTY"/>
    <result property="expDate" column="EXP_DATE"/>
    <result property="warehouse" column="WAREHOUSE"/>
    <result property="empName" column="EMP_NAME"/>
    <result property="lotStatus" column="LOT_STATUS"/>
    <result property="inboundDetId" column="INBOUND_DET_ID"/>
    <result property="initWeight" column="INIT_WEIGHT"/>
    <result property="currWeight" column="CURR_WEIGHT"/>

    <association property="materialVO" resultMap="com.yedam.scm.common.CommonMapper.MaterialMap"/>
</resultMap>

<!--입고마스터T 출력-->
<select id ="getVenShipList" resultMap="inboundResultMap">
SELECT i.inbound_id,
       i.ven_name,
       i.vendor_out_date,
       v.company_name,
       i.ven_out_no,
       i.inbound_status
FROM inbound i
JOIN vendor v
ON i.vendor_id = v.vendor_id
WHERE i.inbound_status = 'm1'
ORDER BY i.vendor_out_date DESC
</select>

<!--입고상세T 출력-->
<select id ="getVenShipDetailList" parameterType = "long" resultMap ="inboundDetailResultMap">
SELECT id.inbound_det_id,
       id.pur_id,
       id.mat_id,
       m.mat_name,
       m.unit,
       id.out_qty,
       id.pur_status_id
FROM inbound_detail id
JOIN material m
ON id.mat_id = m.mat_id
WHERE id.inbound_id = #{inboundId}
</select>

<!--하차등록-->
<select id="callApproveUnload" statementType="CALLABLE">
    {call PROC_APPROVE_UNLOAD(
        #{inboundId, mode=IN, jdbcType=NUMERIC},
        #{unloadEmp,  mode=IN, jdbcType=VARCHAR}
     )}
</select>

<!--하차반품-->
<select id="callUnloadReturn" statementType="CALLABLE">
    {call PROC_UNLOAD_RETURN(
        #{inboundId, mode=IN, jdbcType=NUMERIC},
        #{unloadEmp,  mode=IN, jdbcType=VARCHAR},
        #{rejMemo, mode=IN, jdbcType=VARCHAR}
     )}
</select>

<!--입고대기목록-->
<select id = "getApproveUnload" resultMap="inboundResultMap">
SELECT i.inbound_id,
       i.inbound_no,
       i.unload_date,
       i.unload_emp,
       i.inbound_status,
       v.company_name
FROM inbound i
JOIN vendor v
ON i.vendor_id = v.vendor_id
WHERE inbound_status in ('app', 'm2')
</select>

<!--입고대기목록상세-->
<select id = "getApproveUnloadDetailList" parameterType = "long" resultMap ="inboundDetailResultMap">
SELECT id.inbound_det_id,
       id.pur_id,
       id.mat_id,
       m.mat_name,
       m.stock_unit,
       id.out_qty,
       id.pur_status_id,
       id.in_total_qty
FROM inbound_detail id
JOIN material m
ON id.mat_id = m.mat_id
WHERE id.inbound_id = #{inboundId}
AND id.inbound_status in ('d6', 'd3')
</select>

<!--입고등록-->
<update id="callMatInboundStock" parameterType="InboundDetailVO" statementType="CALLABLE">
    { call PROC_MAT_INBOUND_STOCK  (
        #{inboundDetId,      mode=IN, jdbcType=NUMERIC},
        #{inboundId,         mode=IN, jdbcType=NUMERIC},
        #{inQty,             mode=IN, jdbcType=NUMERIC},
        #{inboundLogVO.logName,    mode=IN, jdbcType=VARCHAR},
        #{inboundLogVO.logExpDate, mode=IN, jdbcType=DATE}
      )
    }
</update>

<!--불량등록[1)정보등록  2)불량정보등록 시퀀스아이디get 3)이미지첨부여부에 따른 이미지 등록]-->
<select id="callRegMatDefect" parameterType="map" statementType="CALLABLE">
{ call PROC_REGISTER_DEFECT(
        #{inboundDetId, mode=IN, jdbcType=NUMERIC},   
        #{logRejQty,   mode=IN, jdbcType=NUMERIC},
        #{logMemo,   mode=IN, jdbcType=VARCHAR},     
        #{logName,   mode=IN, jdbcType=VARCHAR}   )} 
</select>

<select id="selectRecentSeq" resultType="long">
SELECT SEQ_INBOUND_LOG.CURRVAL FROM dual
</select>

<update id="updateDefectImagePath" parameterType="InboundLogVO">
UPDATE inbound_log
SET log_img = #{logImg}
WHERE in_log_id = #{inLogId}
</update>

<!--재고현황-->
<select id="getMatStockList" resultMap="matlotMap">
SELECT * FROM (
    SELECT a.*, ROWNUM rnum
    FROM (
        SELECT
          ml.mat_id,
          m.mat_name,
          SUM(ml.curr_weight) AS curr_weight,
          m.unit,
          SUM(ml.curr_qty) AS curr_qty,
          m.stock_unit
        FROM mat_lot ml
        JOIN material m ON ml.mat_id = m.mat_id
        GROUP BY ml.mat_id, m.mat_name, m.unit, m.stock_unit
        ORDER BY ml.mat_id
    ) a
    WHERE ROWNUM &lt;= #{endRow}
)
WHERE rnum &gt;= #{startRow}
</select>
<!--총 데이터수-->
<select id="getMatStockCount" resultType="long">
SELECT count(DISTINCT mat_id)
FROM mat_lot
</select>

<!--자재별 LOT현황-->
<select id="getMatLotList" resultMap="matlotMap">
SELECT ml.lot_id,
       ml.lot_no,
       m.mat_name,
       ml.curr_weight,
       m.unit,
       ml.curr_qty,
       m.stock_unit,
       ml.reg_date,
       ml.warehouse,
       ml.exp_date,
       ml.lot_status
FROM mat_lot ml
JOIN material m
ON ml.mat_id = m.mat_id
where ml.mat_id = #{matId}
ORDER BY ml.lot_id
</select>

</mapper>