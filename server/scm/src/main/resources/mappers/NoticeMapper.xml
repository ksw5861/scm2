<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yedam.scm.notice.mapper.NoticeMapper">

  <!-- 공지사항 목록 (검색 + 페이징) -->
  <select id="selectNoticeListByConditionAndPaging" resultType="NoticeVO">
    SELECT
      n.notice_no AS noticeNo,
      n.title AS title,
      NVL(a.name, '(알 수 없음)') AS author,
      n.created_at AS createdAt
    FROM (
      SELECT
        notice_no,
        title,
        author,
        created_at,
        ROW_NUMBER() OVER (ORDER BY notice_no DESC) AS rn
      FROM notice
      WHERE 1=1
      <if test="condition.title != null and condition.title != ''">
        AND LOWER(title) LIKE '%' || LOWER(#{condition.title}) || '%'
      </if>
    ) n
    LEFT JOIN account a ON n.author = a.account_id
    WHERE rn BETWEEN #{paging.startRow} AND #{paging.endRow}
    ORDER BY notice_no DESC
  </select>

  <!-- 공지사항 총 개수 -->
  <select id="selectNoticeTotalCountByCondition" parameterType="NoticeSearchDTO" resultType="long">
    SELECT COUNT(*)
    FROM notice
    WHERE 1 = 1
    <if test="title != null and title != ''">
      AND title LIKE '%' || #{title} || '%'
    </if>
  </select>

  <!-- 공지사항 단건 조회 -->
  <select id="selectNoticeByNoticeNo" parameterType="string" resultType="NoticeVO">
    SELECT
      n.content
    FROM notice n
    WHERE n.notice_no = #{noticeNo}
  </select>

  <!-- 선택된 공지사항 기준 총 5건 목록 조회 -->
  <select id="selectNeighborNotices" parameterType="string" resultType="NoticeVO">
      <![CDATA[
      SELECT
          final_result.noticeNo,
          final_result.title,
          final_result.author,
          final_result.createdAt
      FROM (
          SELECT
              t.*,
              ROW_NUMBER() OVER (
                  ORDER BY ABS(TO_NUMBER(SUBSTR(t.noticeNo, 7)) - TO_NUMBER(SUBSTR(#{noticeNo}, 7))) ASC,
                  t.noticeNo DESC
              ) as rn
          FROM (
              SELECT
                  n.notice_no AS noticeNo,
                  n.title,
                  NVL(a.name, '(알 수 없음)') AS author,
                  n.created_at AS createdAt
              FROM notice n
              LEFT JOIN account a ON n.author = a.account_id
              WHERE TO_NUMBER(SUBSTR(n.notice_no, 7)) BETWEEN TO_NUMBER(SUBSTR(#{noticeNo}, 7)) - 4 AND TO_NUMBER(SUBSTR(#{noticeNo}, 7)) + 4
              OR n.notice_no = #{noticeNo}
          ) t
      ) final_result
      WHERE final_result.rn <= 5
      ORDER BY final_result.noticeNo DESC
      ]]>
  </select>

  <!-- 공지사항 등록 -->
  <insert id="insertNotice" parameterType="NoticeVO">
    INSERT INTO notice (
      notice_no, title, author, content, created_at
    ) VALUES (
      next_code('notice'),
      #{title},
      #{author},
      #{content},
      SYSDATE
    )
  </insert>

  <!-- 공지사항 수정 -->
  <update id="updateNotice" parameterType="NoticeVO">
    UPDATE notice
    SET
      title = #{title},
      content = #{content}
    WHERE notice_no = #{noticeNo}
  </update>

  <!-- 공지사항 삭제 -->
  <delete id="deleteNoticeByNoticeNo" parameterType="string">
    DELETE FROM notice
    WHERE notice_no = #{noticeNo}
  </delete>

</mapper>