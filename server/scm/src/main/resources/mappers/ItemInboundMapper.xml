<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.scm.product.mapper.InboundMapper">

  
  <!-- ===== resultMap: DB 컬럼명 → VO 필드명 매핑 (AS 없이) ===== -->
  

   <!-- LOT 목록 조회 -->
  <select id="selectInboundLots"
          resultType="com.yedam.scm.vo.ProductLotVO">
 SELECT
      pl.prod_no,
      pl.prod_id,
      pl.pro_qty,
      pl.mat_status,
      pl.pro_date + p.exp end_date,
      pl.pro_date,
      p.prod_name,
      p.spec,
      p.unit
    FROM product_plan_detail pl
      JOIN product p
        ON p.prod_id = pl.prod_id
        where mat_status = '입고대기' 
      <if test="prodId != null and prodId != ''">
        AND pl.prod_id = #{prodId}
      </if>
      <if test="prodName != null and prodName != ''">
        AND p.prod_name LIKE '%' || #{prodName} || '%'
      </if>
      <if test="endDate != null">
        AND TRUNC(pl.pro_date) = TRUNC(#{endDate})
      </if>
      <if test="prodNo != null and prodNo != ''">
        AND pl.prod_no = #{prodNo}
      </if>
    ORDER BY pl.prod_No DESC
  </select>

              <update id="updateInbound" parameterType="com.yedam.scm.vo.ProductLotVO">
                UPDATE Product_LOT
                SET
                  total_qty     = #{totalQty},
                  remain_qty    = NVL(remain_qty,0) + #{totalQty},
                  transfer_date = NVL(#{transferDate}, SYSDATE),
                  <!-- wh_id         = #{whId}, -->
                  status        = 'Y'
                WHERE prd_lot = #{prdLot}
              </update>

  
 
  <!-- 프로시저 호출 -->
  <select id="callInsertInbound" parameterType="map" statementType="CALLABLE">
    { call INSERT_INBOUND(
        #{prodNo,     mode=IN, jdbcType=VARCHAR},
        #{whId,       mode=IN, jdbcType=VARCHAR},
        #{totalQty,   mode=IN, jdbcType=NUMERIC},
        #{employeeId, mode=IN, jdbcType=VARCHAR},
        #{rowCount,   mode=OUT, jdbcType=NUMERIC, javaType=java.lang.Integer}
      ) }
  </select>



  <!-- 입고 삭제
  <delete id="deleteInbound" parameterType="string">
    DELETE FROM Product_LOT WHERE prd_lot = #{prdLot}
  </delete> -->

  

    <!-- 모달 부분 -->
   <!-- 모달: 제품 목록 조회 -->
<select id="selectInboundProductListByCondition" 
        resultType="ProductVO">
  SELECT *
  FROM (
    SELECT 
      p.prod_id,
      p.prod_name,
      ROW_NUMBER() OVER (ORDER BY p.prod_id DESC) AS rn
    FROM product p
    WHERE 1 = 1
    <if test="(condition != null and condition != '')">
      AND (
          p.prod_id LIKE '%' || #{condition} || '%'
          OR
          p.prod_name LIKE '%' || #{condition} || '%'
      )
    </if>
  )
  WHERE rn BETWEEN #{paging.startRow} AND #{paging.endRow}
</select>


<!-- ============================================================
     제품모달 - 총 건수 조회 (OR 조건 적용)
     ============================================================ -->
<select id="selectInboundProductCountByCondition"
        resultType="long">
  SELECT COUNT(*)
  FROM product p
  WHERE 1=1
    <if test="condition != null and condition != ''">
      AND (
        p.prod_id LIKE '%' || #{condition} || '%'
        OR p.prod_name LIKE '%' || #{condition} || '%'
      )
    </if>
</select>
  <!-- 제품모달 부분 끝 -->




  <!-- ================================
       창고 모달 - 목록 (제품 모달과 동일 패턴)
       condition + 페이징(rn BETWEEN startRow AND endRow)
       ================================ -->
  <select id="selectWarehouseListByCondition"
          resultType="WareHouseVO">
    SELECT *
    FROM (
      SELECT
        w.wh_id   AS whId,
        w.wh_name AS whName,
        ROW_NUMBER() OVER (ORDER BY w.wh_id DESC) AS rn
      FROM warehouse w
      WHERE 1 = 1
        <if test="condition != null and condition != ''">
          AND (
               w.wh_id   LIKE '%' || #{condition} || '%'
            OR w.wh_name LIKE '%' || #{condition} || '%'
          )
        </if>
    )
    WHERE rn BETWEEN #{paging.startRow} AND #{paging.endRow}
  </select>

  <!-- ================================
      제품입고 창고 모달 - 총 건수
       ================================ -->
  <select id="selectWarehouseCountByCondition"
          resultType="long">
    SELECT COUNT(*)
    FROM warehouse w
    WHERE 1 = 1
      <if test="condition != null and condition != ''">
        AND (
             w.wh_id   LIKE '%' || #{condition} || '%'
          OR w.wh_name LIKE '%' || #{condition} || '%'
        )
      </if>
  </select>
  
  


 <!-- 주문승인 페이지 목록 불러오기 -->
<!-- <select id="selectApprovalOrders"
        resultType="com.yedam.scm.vo.SalesOrderVO">
  SELECT
      so.order_id,
      so.order_date,
      so.vendor_id,
      v.company_name,
      sod.prod_status
  FROM sales_order so
    JOIN sales_order_detail sod
      ON so.order_id = sod.order_id
    LEFT JOIN vendor v
      ON so.vendor_id = v.vendor_id
  ORDER BY so.order_date DESC
</select> -->

<!--주문승인 목록 상태자식-->
<select id="selectApprovalOrders"
        resultType="com.yedam.scm.vo.SalesOrderVO">
  SELECT
    so.order_id,
    so.order_date,
    v.company_name,
    MIN(sod.prod_status) AS prod_status
  FROM sales_order so
    JOIN sales_order_detail sod
      ON so.order_id = sod.order_id
    LEFT JOIN vendor v
      ON so.vendor_id = v.vendor_id
  WHERE sod.prod_status = '대기'
  GROUP BY so.order_id, so.order_date, v.company_name
  ORDER BY so.order_date DESC
</select>



  
 <!-- Detail 매핑 (snake -> camel) 주문승인 상세-->
  <resultMap id="SalesOrderDetailMap" type="com.yedam.scm.vo.SalesOrderDetailVO">
    <id     column="odetail_id"      property="odetailId"/>
    <result column="order_id"        property="orderId"/>
    <result column="prod_id"         property="prodId"/>
    <result column="prod_name"       property="prodName"/>
    <result column="spec"            property="spec"/>
    <result column="unit"            property="unit"/>
    <result column="order_qty"       property="orderQty"/>
    <result column="prod_unit_price" property="prodUnitPrice"/>
    <result column="prod_status"     property="prodStatus"/>
  </resultMap>

  <!-- 상세: 해당 주문의 '대기' 라인만 -->
  <select id="selectApprovalDetails" resultMap="SalesOrderDetailMap">
    SELECT
      sod.odetail_id,
      sod.order_id,
      sod.prod_id,
      p.prod_name,
      p.spec,
      p.unit,
      sod.order_qty,
      sod.prod_unit_price,
      sod.prod_status
    FROM sales_order_detail sod
      LEFT JOIN product p
        ON p.prod_id = sod.prod_id
    WHERE sod.order_id = #{orderId}
      AND sod.prod_status = '대기'
    ORDER BY sod.odetail_id
  </select>
  

  <!-- 승인 업데이트: 선택 상세들을 '승인' -->
  <update id="approveDetails">
  UPDATE sales_order_detail
  SET prod_status = '승인'
  WHERE odetail_id IN
  <foreach collection="odetailIds" item="id" open="(" separator="," close=")">
    #{id}
  </foreach>
</update>




</mapper>
